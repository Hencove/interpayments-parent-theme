//
//
:root {
	--global-kb-gap-lg: var(--wp--preset--spacing--large);
	--global-kb-gap-md: var(--wp--preset--spacing--medium);
	--global-kb-gap-sm: var(--wp--preset--spacing--small);
	--global-content-edge-padding: var(--wp--custom--spacing--gutter);
}
// ? this lets inherit max width work for group block when nested inside a row layout block
// ?	it works on the front end but not in the admin area by default
// ?	without this in the editor, blocks appear full-width when they're really content width
//
.wp-block-kadence-rowlayout .block-editor-block-list__layout {
	.is-layout-constrained,
	.wp-block-group-is-layout-constrained {
		> * {
			max-width: var(--wp--style--global--content-size);
		}
	}
}

@import "./libs/index";
//
//
@import "./blocks/paragraph";
@import "./blocks/buttons";
@import "./blocks/columns";
@import "./blocks/image";
@import "./blocks/navigation";
@import "./blocks/kb-rowlayout";

//
//
//

/* content column adjustments to respect the base padding */
header.site-header > * {
	// padding-left: var(--wp--custom--spacing--gutter);
	// padding-right: var(--wp--custom--spacing--gutter);
}

/* 
    these adjustments compensate for the sometimes weird behavior of enabling useRootPaddingAwareAlignments in theme.json 
*/
.entry-content > .alignfull.has-global-padding {
	padding-left: var(--wp--custom--spacing--gutter);
	padding-right: var(--wp--custom--spacing--gutter);
}

.entry-content > .wp-block-cover.alignfull {
	padding-left: 0;
	padding-right: 0;
	.wp-block-cover__inner-container.has-global-padding {
		padding-left: var(--wp--custom--spacing--gutter);
		padding-right: var(--wp--custom--spacing--gutter);
	}
}
